"""Make tags unique and restructure association table

Revision ID: 8b232013809d
Revises: 82d93d741ad3
Create Date: 2021-03-07 09:24:35.700619-08:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8b232013809d'
down_revision = '82d93d741ad3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ride_tag',
    sa.Column('ride_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ride_id'], ['ride.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('ride_id', 'tag_id')
    )
    op.drop_table('ride_tags')
    op.drop_index('ix_tag_name', table_name='tag')
    op.create_index(op.f('ix_tag_name'), 'tag', ['name'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tag_name'), table_name='tag')
    op.create_index('ix_tag_name', 'tag', ['name'], unique=False)
    op.create_table('ride_tags',
    sa.Column('ride_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ride_id'], ['ride.id'], name='ride_tags_ride_id_fkey'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name='ride_tags_tag_id_fkey')
    )
    op.drop_table('ride_tag')
    # ### end Alembic commands ###
